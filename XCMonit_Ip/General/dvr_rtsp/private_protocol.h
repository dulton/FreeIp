#ifndef PRIVATE_PROTOCOL
#define PRIVATE_PROTOCOL

#ifdef __cplusplus
extern "C"
{
#endif

#define PP_FREE(P) if(0!=P){free(P); P=0;}
#define PP_CLOSE_FD(fd) if(-1!=fd){ close(fd); fd = -1;}
#define MAX_PRIVATE_PROTOCOL_CHANNEL_NUM 32
#define MAX_PRIVATE_PROTOCOL_STREAM_NUM  2

#define MAX_FRAMESIZE     1024*1024     // 1M


#define ARG_HEAD_LEN 32
#define ARG_BUFF_LEN 1024
#define ARG_SERIALNUM_LEN 8
/*ÊúçÂä°Âô®Á´ØÂè?/
#define ARG_SERVER_PORT                   10000
/*Êî∂Á¥¢Á´ØÂè£*/
#define ARG_SEARCH_PORT                   10001

/*Êä•ÊñáÂ§¥Á±ªÂû?/
#define ARG_CMD_HEAD                      0x0000
#define ARG_STREAM_HEAD                   0x0001
/*Êåá‰ª§Á±ªÂûã*/
#define CMD_ACT_LOGIN                     0x0000
#define CMD_ACT_LOGOUT                    0x0001
#define CMD_ACT_CREATE_USER               0x0002
#define CMD_ACT_DELETE_USER               0x0003
#define CMD_ACT_MODIFY_USER               0x0004
#define CMD_ACT_PTZ                       0x0005
#define CMD_ACT_HEADRTBEAT                0x0006
#define CMD_ATC_SEARCH                	  0x0007
#define CMD_ATC_SEARCH_RESPONSE           0x0008

#define CMD_GET_SERIALNUM                 0x0101
#define CMD_GET_STREAM                    0x0102

#define CMD_GET_TIME_PRORERTY             0x1000
#define CMD_SET_TIME_PRORERTY             0x1001
#define CMD_GET_ENCODING_PROPERTY         0x1002
#define CMD_SET_ENCODING_PROPERTY         0x1003
#define CMD_GET_IMAGE_PROPERTY            0x1004
#define CMD_SET_IMAGE_PROPERTY            0x1005
#define CMD_GET_NET_PROPERTY              0x1006
#define CMD_SET_NET_PROPERTY              0x1007
#define CMD_GET_MOTIONDETECTION_PROPERTY  0x1008
#define CMD_SET_MOTIONDETECTION_PROPERTY  0x1009


/*SDKÁâàÊú¨*/
#define ARG_SDK_VERSION(_major, _minor)( \
    (((_major)&0xff)<<8) | 	\
    (((_minor)&0xff)) \
)
#define ARG_SDK_VERSION_1_1 ARG_SDK_VERSION(1,1)

/*ÂëΩ‰ª§Áä∂ÊÄ?ÈîôËØØÁ†?*/
#define CMD_SUCCESS        0x0000    //  ÊàêÂäü
#define CMD_VERSION_ERR    0x0001    //  ÁâàÊú¨ÈîôËØØ
#define CMD_NOSUPPORT      0x0002    //  ÂëΩ‰ª§‰∏çÊîØÊå?#define CMD_LIMITED        0x0003    //  ÂëΩ‰ª§ÊùÉÈôê‰∏çË∂≥

#define CMD_ID_ERROR       0x1001    //  Áî®Êà∑IDÈîôËØØ
#define CMD_ARGE_ERROR     0x1002    //  ÂèÇÊï∞ÈîôËØØ


typedef struct ARG_CMD{
    unsigned short ulFlag;            //  00 00
    unsigned short ulVersion;         //  SDK ÁâàÊú¨

    unsigned short usCmd;             //  ÂëΩ‰ª§Á±ªÂûã
    unsigned short ucState;           //  ÂëΩ‰ª§Áä∂ÊÄ?    unsigned long  ulID;              //  Áî®Êà∑ ID

    unsigned long  ulBufferSize;      //  Êâ©Â±ïÂÜÖÂÆπÂ§ßÂ∞è
    unsigned long  ulRes[4];          //  Ê≤°Êúâ‰ΩøÁî®
}ARG_CMD;
/*Á†ÅÊµÅÁä∂ÊÄ?ÊöÇÊó∂Ê≤°Êúâ)*/

/*A/V*/
#define AUDIO_FRAME  0
#define VEDIO_FRAME  1

#define ARG_STREAM_MAGIC_NUM          0x00000024

typedef struct ARG_STREAM{
    unsigned short ulFlag;            //  00 01

    unsigned short usState;           //  Á†ÅÊµÅÁä∂ÊÄ?    unsigned long bMediaType:1;       //  A/V
    unsigned long bFrameType:5;       //  Â∏ßÁ±ªÂû?
    unsigned long bSize:22;           //  Â∏ßÈïøÂ∫?    unsigned long bSubStream:2;       //  Â≠êÁ†ÅÊµ?    unsigned long bRes:2;             //  ‰øùÁïô
                                      //  01 - 25/30FPS   // 10 - 50/60FPS  // 11 - 120FPS
    unsigned long  usCH;              //  ÈÄöÈÅìÂè?0 1 2 3
    unsigned long  ucSerialNum;       //  Â∏ßÂ∫èÂà?    unsigned long  ulTimeStamp;       //  Êó∂Èó¥Êà?
    unsigned short  usWidth;           //  ÂÆΩÂ∫¶
    unsigned short  usHeight;          //  È´òÂ∫¶
    unsigned short  ucFrameRate;       //  Â∏ßÁéá
    unsigned short  ucBitRate;         //  Á†ÅÁéá

    unsigned long  ulMagicNum;         //  Â≠óËäÇÂØπÈΩê
}ARG_STREAM;


/*ËÆæÂ§áÁ±ªÂûã*/
#define ARG_DEV_IPCAMERA  0x00
#define ARG_DEV_DVS       0x01
#define ARG_DEV_NVR       0x02
#define ARG_DEV_DECODER   0x03

typedef struct{
    unsigned char ucDevType;         /*ËÆæÂ§áÁ±ªÂûã*/
    unsigned char ucDevName[35];     /*ËÆæÂ§áÂêçÁß∞*/

    unsigned long ulWebPort;         /*ÁΩëÈ°µÁ´ØÂè£*/
    unsigned long ulRtspPort;        /*rtspÁ´ØÂè£*/
    unsigned long ulTcpPort;         /*tcpÁ´ØÂè£*/

    unsigned long ulIP;              /*IPÂú∞ÂùÄ*/
    unsigned long ulNetMash;         /*Â≠êÁΩëÊé©Á†Å*/
    unsigned long ulGateway;         /*ÁΩëÂÖ≥*/
    unsigned char ucMacAddress[6];   /*macÂú∞ÂùÄ*/
    unsigned char ucRes[2];          /*‰øùÁïô*/
}SEARCH_INFO;


typedef struct USER_INFO{
    unsigned char ucUsername[16];     // Áî®Êà∑Âê?    unsigned char ucPassWord[16];     // ÂØÜÁ†Å
    unsigned char ucPower;            // ÊùÉÈôê  0ÁÆ°ÁêÜÂë? Êìç‰ΩúËÄ?2Áî®Êà∑
    unsigned char ucRes[3];

    unsigned char ucSerialNum[ARG_SERIALNUM_LEN];
}USER_INFO;

/*Á†ÅÊµÅÁ±ªÂûã*/
#define STREAMTYPE_MAINSTREAM 0x00
#define STREAMTYPE_SUBSTREAM  0x01

typedef struct STREAM_INFO{
    unsigned char  ucCH;             /*ÈÄöÈÅìÂè?/
    unsigned char  ucStreamType;     /*Á†ÅÊµÅÁ±ªÂûã*/
    unsigned char  ucRes[2];         /*‰øùÁïô*/
}STREAM_INFO;

typedef struct PTZ_INFO{
    unsigned char ucCh;
    unsigned char ucDirection;       /*ËΩ¨Âä®ÊñπÂêë*/
    unsigned char ucStepSize;        /*Ê≠•Èïø*/
}PTZ_INFO;

typedef struct TIME_PROPERTY{
    unsigned short usYear;           /*Âπ?/
    unsigned char  ucMonth;          /*Êú?/
    unsigned char  ucDay;            /*Êó?/
    unsigned char  ucHour;           /*Êó?/
    unsigned char  ucMinute;         /*Âà?/
    unsigned char  ucSecond;         /*Áß?/
    unsigned char  ucRes[1];         /*‰øùÁïô*/
}TIME_PROPERTY;

typedef struct IMAGE_PROPERTY{
    unsigned char ucCH;              /*ÈÄöÈÅìÂè?/
    unsigned char ucStreamType;      /*Á†ÅÊµÅÁ±ªÂûã 0-‰∏ªÁ†ÅÊµ?1-Ê¨°Á†ÅÊµ?/

    unsigned char ucBrightness;      /*‰∫ÆÂ∫¶*/
    unsigned char ucContrast;        /*ÂØπÊØîÂ∫?/
    unsigned char ucSaturation;      /*È•±ÂíåÂ∫?/
    unsigned char ucHue;             /*Ëâ≤Â∫¶*/

    unsigned char ucRes[2];          /*‰øùÁïô*/
}IMAGE_PROPERTY;

typedef struct ENCODING_PROPERTY{
    unsigned char  ucCH;              /*ÈÄöÈÅìÂè?/
    unsigned char  ucStreamType;      /*Á†ÅÊµÅÁ±ªÂûã 0-‰∏ªÁ†ÅÊµ?1-Ê¨°Á†ÅÊµ?/

    unsigned char  ucPicQuality;      /*ÂõæË±°Ë¥®Èáè 0-ÊúÄÂ•?1-Ê¨°Â•Ω 2-ËæÉÂ•Ω 3-‰∏ÄËà?4-ËæÉÂ∑Æ 5-Â∑?/
    unsigned char  ucBitrateType;     /*Á†ÅÁéáÁ±ªÂûã 0:ÂÆöÁ†ÅÁéáÔºå1:ÂèòÁ†ÅÁé?/

    unsigned short usWidth;          /*ÂÆΩÂ∫¶*/
    unsigned short usHeight;         /*È´òÂ∫¶*/
    unsigned short ucFrameRate;      /*Â∏ßÁéá*/
    unsigned short ucBitRate;        /*Á†ÅÁéá*/

    unsigned char  ucEncodingType;    /*1 h264*/
    unsigned char  ucRes[3];          /*‰øùÁïô*/
}ENCODING_PROPERTY;

typedef struct NET_PROPERTY{
    unsigned char ucNetCardNum;      /*ÁΩëÂç°Âè?/
    unsigned char ucRes[3];          /*‰øùÁïô*/
    unsigned char ulIP[16];              /*IPÂú∞ÂùÄ*/
    unsigned char ulSubNetMask[16];      /*Â≠êÁΩëÊé©Á†Å*/
    unsigned char ulGateway[16];         /*ÁΩëÂÖ≥*/
    unsigned char ulDNSIP[16];           /*DNSÊúçÂä°Âô®Âú∞ÂùÄ*/
}NET_PROPERTY;


#define ALARM TYPE_MOTIONDETECTION 0
typedef struct MOTIONDETECTION_INFO{
    unsigned char ucCH;               /*Êä•Ë≠¶ÈÄöÈÅì*/
    unsigned char ucAlarmType;        /*Êä•Ë≠¶Á±ªÂûã 0ÁßªÂä®Êä•Ë≠¶ */
    unsigned char ucStatus;           /*Êä•Ë≠¶Áä∂ÊÄ?0ÂºÄÂßãÊä•Ë≠? 1,ÁªìÊùüÊä•Ë≠¶*/
    unsigned char ucLevel;            /*Êä•Ë≠¶Á≠âÁ∫ß(ÁÅµÊïèÂ∫? 0È´òÁ∫ß 1‰∏≠Á∫ß 2‰ΩéÁ∫ß*/
    unsigned long ulTime;             /*Êä•Ë≠¶Êó∂Èó¥ 1970Âπ?Êú?Êó?0:00:00ÊâÄÁªèËøáÁöÑÁßíÊï?/
}MOTIONDETECTION_INFO;

typedef struct MOTIONDETECTION_RECT{
    unsigned char x1;                 /*ÁôæÂàÜÊØîÊï∞  0-100*/
    unsigned char y1;                 /*ÁôæÂàÜÊØîÊï∞  0-100*/
    unsigned char x2;                 /*ÁôæÂàÜÊØîÊï∞  0-100*/
    unsigned char y2;                 /*ÁôæÂàÜÊØîÊï∞  0-100*/
}MOTIONDETECTION_RECT;

typedef struct MOTIONDETECTION_PROPERTY{
    unsigned char ucCH;               /*Êä•Ë≠¶ÈÄöÈÅì*/
    unsigned char ucType;             /*ÈÖçÁΩÆÊñπÂºè 0(64ÂàáÂàÜÊñπÂºè 8*8) 1(Èº†Ê†áÊãñÂä®ÊñπÂºè)*/
    unsigned char ucRes;              /*‰øùÁïô*/
    unsigned char ucBlock[8];         /*ucBlock[0]ÁöÑÁ¨¨0‰Ωç‰∏∫1 Âà?4ÂàáÂàÜÁöÑÁ¨¨1Ë°åÂ∑¶ËæπÁ¨¨1ÂùóÂå∫ÂüüÁßªÂä®‰æ¶Êµã‰∏∫ÊâìÂºÄ,0‰∏∫ÂÖ≥Èó?/
    MOTIONDETECTION_RECT ucArea[12];  /*12ÁªÑÁôæÂàÜÊØîÂå∫Âüü*/
}MOTIONDETECTION_PROPERTY;




typedef struct private_protocol_info_t
{
    unsigned int run;   //±Í æ¥Úø™°¢πÿ±’ ”∆µ
    unsigned int ip;
    unsigned int port;

    int cmdSocketFd;    //–≈¡Ósocket
    int streamSocketFd;   //√ΩÃÂ¡˜socket

    int usercount;    
    int isWaitReply;   //µ»¥˝–≈¡Óªÿ∏¥
    int isWaitHeartbeatReply;  //µ»¥˝–ƒÃ¯ªÿ∏¥
	
    unsigned long userId;
    unsigned long cmdState;

}private_protocol_info_t;


private_protocol_info_t *private_protocol_init();
void private_protocol_stop(private_protocol_info_t  **pStreamInfo);
int private_protocol_login(private_protocol_info_t *pStreamInfo, unsigned int ip, unsigned int port, char *name, char *passwd);
int private_protocol_getStream(private_protocol_info_t *pStreamInfo, int channelNo, int streamNo);

void RecvOneFramedata(char *data,int datalen);

int StartGetStream(private_protocol_info_t *arg);
void private_protocol_heartbeat(private_protocol_info_t *arg);
void private_protocol_sendHeartbeat(void *arg);
void private_protocol_recvHeartbeat(void *arg);
int SK_ConnectTo(unsigned int ip,int port);
int SK_SelectWait(unsigned int fd, int msec);



#ifdef __cplusplus
}   
#endif      
#endif


